# Workflow that is manually triggered - to generate coverage in the file jacaco.csv. 
# This file is then parsed to generate a coverage percentage.
# readme.MD is then updated with this value to make a coverage badge.

name: Test workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# runs tests and generate Jacoco report
# 
  
jobs:
  # This workflow contains a single job called "test"
  test:
    runs-on: ubuntu-latest

    steps:
      - run: echo "Start step"
      - uses: actions/checkout@v2
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: echo "maven step"
      - name: run tests with Maven
        run: |
          mvn test --file pom.xml
      - name: Run coverage parse script
        run: |
         if [ -e /home/runner/work/portal-core/portal-core/target/jacoco.exec ]
         then
            echo "jacoco.exec found"
         else
            echo "jacoco.exe missing"
         fi
         chmod +x scripts/coverage_percentage.sh
         percent=`scripts/coverage_percentage.sh`
         echo $percent > coverage/percentage.txt
         echo coverage = $percent
         cat /home/runner/work/portal-core/portal-core/target/site/jacoco/jacoco.csv > coverage/jacoco.csv
        shell: bash

      - name: Commit changes
        uses: EndBug/add-and-commit@v8
        with:
          author_name: Chris Peters
          author_email: chris.peters@csiro.au
          message: coverage percentage
          add: coverage/percentage.txt coverage/jacoco.csv
  
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2

      - name: Log coverage percentage
        run: |
           echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
           echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        run: |
           if [[ `git status --porcelain` ]]; then
             git config --global user.name 'Chris Peters'
             git config --global user.email 'chris.peters@csiro.au'
             git add -A
             git commit -m "Autogenerated JaCoCo coverage badge"
             git push
           fi
        
      - run: echo "End step"
